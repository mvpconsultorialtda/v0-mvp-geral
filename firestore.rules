rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    // Regras para a coleção 'lists'
    match /lists/{listId} {
      function canAccessList() {
        // Verifica se o usuário é o proprietário ou se a lista foi compartilhada com ele
        let list = get(/databases/$(database)/documents/lists/$(listId));
        return isUserAuthenticated() && (request.auth.uid == list.data.ownerId || request.auth.uid in list.data.sharedWith);
      }

      function isListOwner() {
        let list = get(/databases/$(database)/documents/lists/$(listId));
        return isUserAuthenticated() && request.auth.uid == list.data.ownerId;
      }

      // Leitura/Atualização: o usuário deve ser o proprietário ou a lista deve ser compartilhada com ele.
      allow read, update: if canAccessList();

      // Criação: o usuário deve estar autenticado e o ownerId no novo documento deve ser o seu próprio UID.
      allow create: if isUserAuthenticated() && request.auth.uid == request.resource.data.ownerId;

      // Exclusão: apenas o proprietário pode excluir.
      allow delete: if isListOwner();

      // Regras para a subcoleção 'tasks'
      match /tasks/{taskId} {
        // Qualquer pessoa com acesso à lista pode ler, criar, atualizar e excluir tarefas.
        allow read, write: if canAccessList();
      }
    }

    // Regras para a coleção 'users'
    match /users/{userId} {
        // Qualquer usuário autenticado pode ler a lista de usuários (para fins de compartilhamento).
        allow read: if isUserAuthenticated();
        // Um usuário só pode criar, atualizar ou excluir seu próprio documento de usuário.
        allow write: if isUserAuthenticated() && request.auth.uid == userId;
    }
  }
}
