rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function canAccessList(listId) {
      // Verifica se o usuário é o proprietário ou se a lista foi compartilhada com ele.
      // Usamos get() porque esta função pode ser chamada em regras de tarefas onde 'resource' se refere à tarefa.
      let list = get(/databases/$(database)/documents/lists/$(listId));
      return isUserAuthenticated() && (request.auth.uid == list.data.ownerId || request.auth.uid in list.data.sharedWith);
    }

    function isListOwner(listId) {
      // Verifica se o usuário é o proprietário da lista.
      let list = get(/databases/$(database)/documents/lists/$(listId));
      return isUserAuthenticated() && request.auth.uid == list.data.ownerId;
    }

    match /lists/{listId} {
      // Leitura permitida para proprietário e membros compartilhados.
      // 'resource' refere-se ao documento 'list' que está sendo lido.
      allow read: if isUserAuthenticated() && (request.auth.uid == resource.data.ownerId || request.auth.uid in resource.data.sharedWith);

      // Criação permitida apenas para o usuário que será o proprietário.
      // 'request.resource' refere-se ao documento que está sendo criado.
      allow create: if isUserAuthenticated() &&
                      request.auth.uid == request.resource.data.ownerId &&
                      'name' in request.resource.data &&
                      request.resource.data.name is string &&
                      request.resource.data.name.size() > 0 &&
                      request.resource.data.sharedWith is list;

      // Atualização permitida apenas para o proprietário da lista.
      // Não permitir a alteração do proprietário.
      allow update: if isListOwner(listId) &&
                      request.resource.data.ownerId == resource.data.ownerId;

      // Exclusão permitida apenas para o proprietário.
      allow delete: if isListOwner(listId);

      // Regras para a subcoleção 'tasks' aninhada em 'lists'
      match /tasks/{taskId} {
        // Leitura de tarefas permitida para todos que têm acesso à lista.
        allow read: if canAccessList(listId);
        
        // Criação de tarefas com validação de dados.
        allow create: if canAccessList(listId) &&
                         'text' in request.resource.data &&
                         request.resource.data.text is string &&
                         request.resource.data.text.size() > 0 &&
                         'completed' in request.resource.data &&
                         request.resource.data.completed == false;

        // Atualização de tarefas permitida para quem tem acesso à lista, com validações.
        allow update: if canAccessList(listId) &&
                         ('text' in request.resource.data || 'completed' in request.resource.data);
        
        // Exclusão de tarefas permitida para quem tem acesso à lista.
        allow delete: if canAccessList(listId);
      }
    }

    // Regras para a coleção de usuários
    match /users/{userId} {
      // Qualquer usuário autenticado pode ler perfis para funcionalidades de compartilhamento.
      allow read: if isUserAuthenticated();
      
      // Um usuário só pode modificar seu próprio perfil.
      allow write: if isUserAuthenticated() && request.auth.uid == userId;
    }
  }
}
